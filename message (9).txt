local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera
local Mouse = LocalPlayer:GetMouse()

local SilentAimEnabled = false
local TargetPlayer = nil
local FOV = 500

_G.SilentAimLoaded = true

local function GetClosestPlayerToMouse()
    local MaxDistance = FOV
    local Target = nil
    
    for _, Player in pairs(Players:GetPlayers()) do
        if Player ~= LocalPlayer then
            if Player.Character and Player.Character:FindFirstChild("Humanoid") and Player.Character.Humanoid.Health > 0 and Player.Character:FindFirstChild("Head") then
                local ScreenPoint = Camera:WorldToScreenPoint(Player.Character.Head.Position)
                local VectorDistance = (Vector2.new(Mouse.X, Mouse.Y) - Vector2.new(ScreenPoint.X, ScreenPoint.Y)).Magnitude
                
                if VectorDistance < MaxDistance then
                    MaxDistance = VectorDistance
                    Target = Player
                end
            end
        end
    end
    
    return Target
end

local function ApplyHighlight(Character)
    if not Character then return end
    
    local Highlight = Instance.new("Highlight")
    Highlight.Name = "SilentAimHighlight"
    Highlight.FillColor = Color3.fromRGB(255, 0, 0)
    Highlight.OutlineColor = Color3.fromRGB(255, 0, 0)
    Highlight.FillTransparency = 0.5
    Highlight.OutlineTransparency = 0
    Highlight.Parent = Character
    return Highlight
end

local function RemoveHighlight(Character)
    if Character and Character:FindFirstChild("SilentAimHighlight") then
        Character.SilentAimHighlight:Destroy()
    end
end

local FOVCircle = Drawing.new("Circle")
FOVCircle.Visible = true
FOVCircle.Radius = FOV
FOVCircle.Thickness = 1
FOVCircle.Transparency = 0.7
FOVCircle.Color = Color3.fromRGB(255, 255, 255)

local GunHandler = nil

for _, Module in pairs(getgc(true)) do
    if type(Module) == "table" and type(rawget(Module, "getAim")) == "function" and type(rawget(Module, "shoot")) == "function" then
        GunHandler = Module
        break
    end
end

if not GunHandler then return end

local oldGetAim = GunHandler.getAim

GunHandler.getAim = hookfunction(oldGetAim, function(origin, ...)
    if SilentAimEnabled and TargetPlayer and TargetPlayer.Character and TargetPlayer.Character:FindFirstChild("Head") and TargetPlayer.Character.Humanoid.Health > 0 then
        if LocalPlayer.Character and (origin - LocalPlayer.Character.HumanoidRootPart.Position).Magnitude < 10 then
            local targetPos = TargetPlayer.Character.Head.Position
            return (targetPos - origin).Unit, (targetPos - origin).Magnitude
        end
    end
    
    return oldGetAim(origin, ...)
end)

local oldShoot = GunHandler.shoot

GunHandler.shoot = hookfunction(oldShoot, function(p33, ...)
    if SilentAimEnabled and TargetPlayer and TargetPlayer.Character and TargetPlayer.Character:FindFirstChild("Head") and p33 and p33.Shooter == LocalPlayer.Character then
        p33.AimPosition = TargetPlayer.Character.Head.Position
        p33.Hit = TargetPlayer.Character.Head
        p33.Normal = Vector3.new(0, 1, 0)
    end
    
    return oldShoot(p33, ...)
end)

local mt = getrawmetatable(game)
setreadonly(mt, false)
local oldIndex = mt.__index
local oldNamecall = mt.__namecall

mt.__namecall = newcclosure(function(self, ...)
    local args = {...}
    local method = getnamecallmethod()
    
    if method == "FireServer" and self.Name == "ShootGun" and SilentAimEnabled and TargetPlayer and TargetPlayer.Character then
        local targetPart = TargetPlayer.Character:FindFirstChild("Head")
        if targetPart then
            args[1] = targetPart.Position
        end
    end
    
    if method == "FireServer" or method == "InvokeServer" then
        if self.Name:match("Report") or self.Name:match("Anti") or self.Name:match("Detect") or self.Name:match("Check") then
            return nil
        end
    end
    
    if method == "Kick" and self == LocalPlayer then
        return nil
    end
    
    return oldNamecall(self, unpack(args))
end)

mt.__index = newcclosure(function(self, key)
    if key == "Hit" or key == "Target" then
        if SilentAimEnabled and TargetPlayer and TargetPlayer.Character and TargetPlayer.Character:FindFirstChild("Head") then
            if self == Mouse and LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Tool") then
                if key == "Hit" then
                    return TargetPlayer.Character.Head.CFrame
                elseif key == "Target" then
                    return TargetPlayer.Character.Head
                end
            end
        end
    end
    
    return oldIndex(self, key)
end)

setreadonly(mt, true)

local function HookRemoteEvents()
    for _, v in pairs(getgc(true)) do
        if type(v) == "table" and type(rawget(v, "FireServer")) == "function" then
            local oldFireServer = v.FireServer
            v.FireServer = hookfunction(oldFireServer, function(self, ...)
                local args = {...}
                
                if self.Name == "ShootGun" and SilentAimEnabled and TargetPlayer and TargetPlayer.Character then
                    if typeof(args[1]) == "Vector3" then
                        args[1] = TargetPlayer.Character.Head.Position
                    end
                    
                    if typeof(args[2]) == "Instance" then
                        args[2] = TargetPlayer.Character.Head
                    end
                end
                
                if self.Name:match("Report") or self.Name:match("Anti") or self.Name:match("Detect") or self.Name:match("Check") then
                    return nil
                end
                
                return oldFireServer(self, unpack(args))
            end)
        end
    end
end

pcall(HookRemoteEvents)

UserInputService.InputBegan:Connect(function(Input, GameProcessed)
    if not GameProcessed and Input.KeyCode == Enum.KeyCode.V then
        SilentAimEnabled = not SilentAimEnabled
        
        if SilentAimEnabled then
            TargetPlayer = GetClosestPlayerToMouse()
            
            if TargetPlayer and TargetPlayer.Character then
                ApplyHighlight(TargetPlayer.Character)
            else
                SilentAimEnabled = false
            end
        else
            if TargetPlayer and TargetPlayer.Character then
                RemoveHighlight(TargetPlayer.Character)
            end
            TargetPlayer = nil
        end
    end
end)

RunService.Heartbeat:Connect(function()
    if SilentAimEnabled then
        if not TargetPlayer or not TargetPlayer.Character or not TargetPlayer.Character:FindFirstChild("Head") or not TargetPlayer.Character:FindFirstChild("Humanoid") or TargetPlayer.Character.Humanoid.Health <= 0 then
            if TargetPlayer and TargetPlayer.Character then
                RemoveHighlight(TargetPlayer.Character)
            end
            
            TargetPlayer = GetClosestPlayerToMouse()
            
            if TargetPlayer and TargetPlayer.Character then
                ApplyHighlight(TargetPlayer.Character)
            else
                SilentAimEnabled = false
            end
        end
    end
end)

RunService.RenderStepped:Connect(function()
    FOVCircle.Position = Vector2.new(Mouse.X, Mouse.Y + 36)
    FOVCircle.Color = SilentAimEnabled and Color3.fromRGB(255, 0, 0) or Color3.fromRGB(255, 255, 255)
end)

game:GetService("Players").PlayerRemoving:Connect(function(Player)
    if Player == TargetPlayer then
        SilentAimEnabled = false
        TargetPlayer = nil
    end
end)

for _, connection in pairs(getconnections(game:GetService("ScriptContext").Error)) do
    connection:Disable()
end

for _, connection in pairs(getconnections(game:GetService("LogService").MessageOut)) do
    connection:Disable()
end